{"version":3,"sources":["dao/users.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+DAAsC;AAGtC,SAAsB,QAAQ,CAAC,EAAU;;QACvC,IAAI;YACF,OAAO,MAAM,cAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;SAC/B;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,KAAK,CAAA;SACZ;IACH,CAAC;CAAA;AAND,4BAMC;AAED,SAAsB,WAAW,CAAC,KAAa;;QAC7C,IAAI;YACF,OAAO,MAAM,cAAI,CAAC,OAAO,CAAC;gBACxB,KAAK,EAAE,EAAE,KAAK,EAAE;gBAChB,OAAO,EAAE,CAAC,cAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;aACtC,CAAC,CAAA;SACH;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,KAAK,CAAA;SACZ;IACH,CAAC;CAAA;AATD,kCASC;AAED,SAAsB,MAAM,CAAC,IAAS,EAAE,WAAyB;;QAC/D,IAAI;YACF,OAAO,MAAM,cAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC,CAAA;SAChD;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,KAAK,CAAA;SACZ;IACH,CAAC;CAAA;AAND,wBAMC;AAED,SAAsB,cAAc,CAAC,MAAW,EAAE,QAAgB,EAAE,WAAyB;;QAC3F,IAAI;YACF,OAAO,MAAM,cAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,WAAW,EAAE,CAAC,CAAA;SAC/E;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,KAAK,CAAA;SACZ;IACH,CAAC;CAAA;AAND,wCAMC","file":"users.js","sourcesContent":["import User from '../sqlz/models/user'\nimport { Transaction } from 'sequelize/types'\n\nexport async function findById(id: string): Promise<any> {\n  try {\n    return await User.findByPk(id)\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function findByEmail(email: string): Promise<any> {\n  try {\n    return await User.findOne({\n      where: { email },\n      include: [User.associations.contacts]\n    })\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function create(user: any, transaction?: Transaction): Promise<any> {\n  try {\n    return await User.create(user, { transaction })\n  } catch (error) {\n    throw error\n  }\n}\n\nexport async function updatePassword(userId: any, password: string, transaction?: Transaction): Promise<any> {\n  try {\n    return await User.update({ password }, { where: { id: userId }, transaction })\n  } catch (error) {\n    throw error\n  }\n}\n"],"sourceRoot":"../../src"}