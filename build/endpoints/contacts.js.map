{"version":3,"sources":["endpoints/contacts.ts"],"names":[],"mappings":"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","file":"contacts.js","sourcesContent":["import { Request, Response } from 'express'\nimport { ContactsDao, UsersDao } from '../dao/_index'\n\nexport async function findByUser(req: Request, res: Response) {\n  try {\n    const { userId } = req.params\n    const user = await UsersDao.findById(userId)\n\n    if (!user) {\n      return res.status(404).json({ error: 'Provided user doesn\\'t exist', errorCode: 'USER_NOT_EXIST', status: 404 })\n    }\n\n    const contacts = await ContactsDao.findAll(userId)\n\n    return res.status(200).json(contacts)\n  }\n  catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}\n\nexport async function findById(req: Request, res: Response) {\n  try {\n    const { contactId } = req.params\n    const contact = await ContactsDao.findById(contactId)\n\n    if (!contact) {\n      return res.status(404).json({ error: 'Provided contact doesn\\'t exist', errorCode: 'CONTACT_NOT_EXIST', status: 404 })\n    }\n\n    return res.status(200).json(contact)\n  }\n  catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}\n\nexport async function create(req: Request, res: Response) {\n  try {\n    // ToDo: handle get userId from token\n\n    const newContact = { ...req.body, userId: 1 }\n    const createdContact = await ContactsDao.create(newContact)\n\n    return res.status(202).json(createdContact)\n  } catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}\n\nexport async function remove(req: Request, res: Response) {\n  try {\n    const { contactId } = req.params\n    await ContactsDao.remove(contactId)\n\n    return res.status(204).json()\n  } catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}"],"sourceRoot":"../../src"}