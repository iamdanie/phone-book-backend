{"version":3,"sources":["endpoints/users.ts"],"names":[],"mappings":"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","file":"users.js","sourcesContent":["import { Request, Response } from 'express'\nimport { UsersDao } from '../dao/_index'\n\nexport async function authenticate(req: Request, res: Response) {\n  try {\n    const { email, password } = req.body\n    if (userCredentialsAreValid(email, password)) {\n      // ToDo: return JWT authentication token\n      return res.status(200).json({ token: 'FOO' })\n    }\n\n    return res.status(403).json({ error: 'You have provided a wrong username/password', errorCode: 'INVALID_LOGIN', status: 403 })\n  }\n  catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}\n\nexport async function register(req: Request, res: Response) {\n  try {\n    const userDb = await UsersDao.create(req.body)\n    const user = userDb.toJSON()\n    delete user.password\n\n    // ToDo: return JWT authentication token\n    return res.status(202).json(user)\n  }\n  catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}\n\nexport async function resetPassword(req: Request, res: Response) {\n  try {\n    const { userId } = req.params\n    const { email, currentPassword, newPassword } = req.body\n\n    if (await userCredentialsAreValid(email, currentPassword, userId)) {\n      await UsersDao.updatePassword(userId, newPassword)\n\n      return res.status(200).json({\n        status: 200,\n        message: `User password has been updated successfully`,\n        code: 'PASSWORD_RESET_SUCCESS'\n      })\n    }\n\n    return res.status(403).json({ error: 'Your current password is wrong', errorCode: 'WRONG_CURRENT_PASSWORD', status: 403 })\n  }\n  catch (error) {\n    return res.status(500).json({ error: error.response || error })\n  }\n}\n\nasync function userCredentialsAreValid(email: string, password: string, userId?: string) {\n  const userDb = userId ? await UsersDao.findById(userId) : await UsersDao.findByEmail(email)\n  const user = await userDb.toJSON()\n\n  return user && password === user.password\n}\n"],"sourceRoot":"../../src"}